// src/tests/Navbar.test.tsx
// ğŸ“Œ Importation des outils nÃ©cessaires pour les tests
import { describe, test, expect } from "vitest"; // âœ… Importation de Vitest (framework de test)
import { render, screen } from "@testing-library/react"; // âœ… Importation des outils de test React
import { MemoryRouter } from "react-router-dom"; // âœ… Importation de MemoryRouter pour simuler un routeur en test
import Navbar from "../components/Navbar"; // âœ… Importation du composant Ã  tester

// ğŸ“Œ `describe()` permet de regrouper plusieurs tests sous un mÃªme bloc
describe("Navbar", () => {
  // ğŸ“Œ `test()` dÃ©finit un test unitaire (cas de test)
  test("affiche le bon texte", () => {
    // ğŸ“Œ `render()` sert Ã  afficher le composant en mÃ©moire pour le tester
    render(
      <MemoryRouter> {/* âœ… Simulation d'un Router pour Ã©viter l'erreur `useLocation()` */}
        <Navbar />
      </MemoryRouter>
    );

    // ğŸ“Œ `screen.getByText()` cherche un Ã©lÃ©ment qui contient le texte "Rap_App"
    //    Si l'Ã©lÃ©ment est trouvÃ©, `expect().toBeInTheDocument()` valide le test
    expect(screen.getByText("Rap_App")).toBeInTheDocument();
  });
});
